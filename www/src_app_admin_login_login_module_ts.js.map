{"version":3,"file":"src_app_admin_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;;AAAf,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5B;AACA;AACA;AACA;AACA;CAGA;;AACA;CAEA;;AACA;AACA;IAOaW,SAAS,SAATA,SAAS;EAWpBC,YAAoBC,MAApB,EACoBC,QADpB,EAEoBC,GAFpB,EAGoBC,QAHpB,EAIoBC,OAJpB,EAKoBC,IALpB,EAMoBC,SANpB,EAOoBC,cAPpB,EAOiE;IAP7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAfpB,YAAK;MACHC,KAAK,EAAC,EADH;MAEHC,QAAQ,EAAC;IAFN,CAAL;IAMA,kBAAY,KAAZ;IACA,eAAS,IAAT;EAWa;;EAEbC,QAAQ,IACP,CAxBmB,CA0BpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACAC,MAAM;IAAA;;IACJ;IACA;IACEC,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUN,KAAtB,EAA6B,KAAKM,IAAL,CAAUL,QAAvC,EAHE,CAIF;;IACF,KAAKF,cAAL,CAAoBQ,KAApB,CAA0B,KAAKD,IAAL,CAAUN,KAApC,EAA2C,KAAKM,IAAL,CAAUL,QAArD,EAA+DO,IAA/D,CAAoEC,GAAG,IAAG;MACxEL,OAAO,CAACC,GAAR,CAAYI,GAAZ;MACAL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,GAAhB;MACA,KAAKhB,GAAL,CAASiB,WAAT,GAAuBF,GAAG,CAACC,GAA3B;MACAN,OAAO,CAACC,GAAR,CAAY,KAAKX,GAAL,CAASiB,WAArB;MACF,MAAMC,IAAI,GAAK;QACbX,QAAQ,EAAE,KAAKK,IAAL,CAAUL;MADP,CAAf;MAIA,KAAKH,SAAL,CAAee,MAAf,CAAsB,OAAtB,EAA8BJ,GAAG,CAACC,GAAlC,EAAuCE,IAAvC,EAA6CJ,IAA7C,CAAkDC,GAAG,IAAE;QACrDL,OAAO,CAACC,GAAR,CAAYI,GAAZ;MACD,CAFD;MAIA,KAAKjB,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,YAAD,CAArB;MACA,KAAKnB,QAAL,CAAcoB,QAAd,CAAuBN,GAAG,CAACC,GAA3B;MACA,KAAKhB,GAAL,CAASsB,OAAT,GAAmBC,SAAnB,CAA6BX,IAAI,IAAE;QACjCF,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,IAAzB;QACAF,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,IAAI,CAACY,EAAvB,EAA2BT,GAAG,CAACC,GAA/B,EAFiC,CAGjC;;QACE,KAAKf,QAAL,CAAcwB,gBAAd,CAA+Bb,IAA/B;QACA,KAAKc,YAAL,GAAoB,KAAKzB,QAAL,CAAc0B,WAAd,EAApB;QACAjB,OAAO,CAACC,GAAR,CAAY,KAAKe,YAAjB,EAN+B,CAOjC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACD,CArBD;IAsBC,CArCD;MAAA,mIAqCE,WAAME,KAAN,EAAc;QACd;QACA,MAAMC,KAAK,SAAS,KAAI,CAAC7B,GAAL,CAAS8B,WAAT,CAAqB,6BAArB,EAAoD,KAApD,EAA2D,KAA3D,CAApB;QACA,MAAMD,KAAK,CAACE,OAAN,EAAN;MACF,CAzCA;;MAAA;QAAA;MAAA;IAAA;IA0CArB,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUN,KAAtB,EAA6B,KAAKM,IAAL,CAAUL,QAAvC;EACD;;EAEDyB,SAAS;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACF;IACA;IACA,MAAMC,IAAI,GAAG1C,sDAAO,EAApB;IACA,MAAMqB,IAAI,GAAGqB,IAAI,CAACC,WAAlB;IACAxB,OAAO,CAACC,GAAR,CAAYsB,IAAZ,EAAkBrB,IAAlB;IACApB,6DAAc,CAACoB,IAAD,EAAO,KAAKuB,WAAZ,CAAd,CAAuCrB,IAAvC,CAA4CC,GAAG,IAAG;MAChDL,OAAO,CAACC,GAAR,CAAYI,GAAZ;IACD,CAFD;IAGA,KAAKqB,UAAL,GAAkB,KAAlB;IACA,KAAKC,OAAL,GAAc,IAAd;EACD;;EAEDC,cAAc;IACZ;IACA,KAAKF,UAAL,GAAiB,IAAjB;IACA,KAAKC,OAAL,GAAc,KAAd;IACA3B,OAAO,CAACC,GAAR,CAAY,KAAZ;EACD;;EAEK4B,SAAS;IAAA;;IAAA;MACb,MAAI,CAACF,OAAL,GAAc,IAAd;MACA,MAAI,CAACD,UAAL,GAAkB,KAAlB,CAFa,CAGb;MACA;IAJa;EAKd;;EAEKI,SAAS;IAAA;;IAAA;MACb,MAAI,CAACnC,cAAL,CAAoBoC,eAApB,CAAoC,MAAI,CAAC7B,IAAL,CAAUN,KAA9C;;MACA,MAAI,CAAC+B,OAAL,GAAc,IAAd;MACA,MAAI,CAACD,UAAL,GAAkB,KAAlB;MACA,MAAMP,KAAK,SAAS,MAAI,CAAC7B,GAAL,CAAS8B,WAAT,CAAqB,8CAArB,EAAqE,KAArE,EAA4E,KAA5E,CAApB;MACE,MAAMD,KAAK,CAACE,OAAN,EAAN;IALW;EAMd;;EACDW,SAAS;IACP,KAAK5C,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,cAAD,CAArB;EAED;;AA9JmB;;;;;;;;;;;;;;;;;;;;AAATxB,SAAS,uDALrBX,yDAAS,CAAC;EACT0D,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAKY,GAAThD,SAAS,CAAT","sources":["./src/app/admin/login/login-routing.module.ts","./src/app/admin/login/login.module.ts","./src/app/admin/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {AngularFireAuth} from '@angular/fire/compat/auth'\nimport {FirebaseAuthenticationService} from 'src/app/service/firebase-authentication.service'\nimport { ApiService } from 'src/app/service/api.service';\nimport { InituserService } from 'src/app/service/inituser.service';\nimport { User } from 'src/app/pages/models/user';\n// import { send } from 'process';\nimport {getAuth,updatePassword} from 'firebase/auth';\nimport {NavController} from '@ionic/angular'\n// import {} from ''\nimport { UtilService } from 'src/app/service/util.service';\nimport { FirestoreService } from 'src/app/service/firestore.service';\ndeclare let Email: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  private loggedinUser: User\n  user={\n    email:'',\n    password:''\n  }\n\n  temPassword:string;\n  forgetpass= false\n  backlog= true\n  constructor(private router: Router,\n              private fireauth: AngularFireAuth,\n              private api : ApiService,\n              private initUser: InituserService,\n              private navCont: NavController,\n              private util: UtilService,\n              private firestore: FirestoreService,\n              private authentication: FirebaseAuthenticationService,\n              ) { \n                \n              }\n\n  ngOnInit() {\n  }\n\n  // public createAccount(email: string, password: string): Promise<any> {\n  //   return new Promise<any>((resolved, rejected) => {\n  //     this.fireauth.createUserWithEmailAndPassword(email, password)\n  //       .then(res => {\n  //         if (res.user) {\n  //           console.log(res.user)\n  //           resolved(res.user);\n  //         } else {\n  //           rejected(res);\n  //         }\n  //       })\n  //       .catch(err => {\n  //         rejected(err);\n  //       });\n  //   });\n  // }\n  moveTo(){\n    // this.createAccount(this.user.email, this.user.password).then(user=>{\n    //   console.log('user',user)\n      console.log(this.user.email, this.user.password)\n      // })\n    this.authentication.login(this.user.email, this.user.password).then(res =>{\n      console.log(res)\n      console.log(res.uid)\n      this.api.loginUserId = res.uid\n      console.log(this.api.loginUserId)\n    const pass:any={\n      password: this.user.password\n    }\n\n    this.firestore.update('admin',res.uid, pass).then(res=>{\n      console.log(res)\n    })\n\n    this.router.navigate(['admin/home']); \n    this.initUser.setToken(res.uid)\n    this.api.getUser().subscribe(user=>{\n      console.log('user name', user)\n      console.log('res',user.id, res.uid,)\n      // if(user.id === res.uid){\n        this.initUser.setLoggedInAdmin(user)\n        this.loggedinUser = this.initUser.getUserData()\n        console.log(this.loggedinUser)\n      // }else{\n      //   this.api.getAdminUser().subscribe(adminadd=>{\n      //     console.log('user name', adminadd)\n      //     console.log('adminadd',adminadd, adminadd.name)\n      //     this.initUser.setLoggedInAdmin(adminadd)\n      //     this.loggedinUser = this.initUser.getUserData()\n      //     console.log(this.loggedinUser)\n      //   })\n      // }\n      // res.map(user=>{\n      // console.log('user name', user.name)\n      // console.log('user name', user)\n      // })\n      // this.adminUser.push(res)\n    })\n    },async error => {\n      //await laoder.dismiss();\n      const toast = await this.api.createToast('Invalid AdminID or Password', false, 'top');\n      await toast.present();\n   })\n    console.log(this.user.email, this.user.password)\n  }\n\n  resetpass(){\n      // const email = new email.send()\n      // this.api.getSchHistory(this.user.email).subscribe(user=>{\n      //   console.log(user)\n      //   user.map(res=>{\n      //     this.temPassword = res.temporary_password\n      //     console.log(res.temporary_password)\n      //   })\n      // })\n      // Email.send({\n      //     Host : \"smtp.elasticemail.com\",\n      //     Username : \"lilypackiyam@gmail.com\",\n      //     Password : \"0527721E803854F2C924B66A3BAEAE2A03B2\",\n      //     // To : document.getElementById('requestEmail').value,\n      //     To : this.user.email,\n      //     From : 'lilypackiyam@gmail.com',\n      //     Subject : \"This is the subject\",\n      //     Body : `${'we have created a new admin account for you.Here is the link to activate the account.'}\n      //              userName : ${this.user.email},\n      //              password : ${this.temPassword}\n      //              `,\n       \n      // }).then(message =>{\n      //   alert('message sent')\n      //   console.log(message)\n      // })\n\n      // this.fireauth.sendPasswordResetEmail(this.user.email, {url:'http://localhost:8100/pages/login',handleCodeInApp: false}).then(res =>{\n      //   console.log(res)\n      // })\n    // this.authentication.forgotPassoword(this.user.email)\n    // this.authentication.verificationCode(this.user.email)\n    const auth = getAuth()\n    const user = auth.currentUser\n    console.log(auth, user)\n    updatePassword(user, this.temPassword).then(res =>{\n      console.log(res)\n    })\n    this.forgetpass = false\n    this.backlog= true\n  }\n\n  forgetpassword(){\n    // this.util.goForward('admin/password')\n    this.forgetpass =true\n    this.backlog =false\n    console.log('res')\n  }\n\n  async backlogin(){\n    this.backlog= true\n    this.forgetpass = false\n    // const toast = await this.api.createToast('Link sent your email, please check the spam folder in your mail', false, 'top');\n    //   await toast.present();\n  }\n\n  async sendEmail(){\n    this.authentication.forgotPassoword(this.user.email)\n    this.backlog= true\n    this.forgetpass = false\n    const toast = await this.api.createToast('Link sent your email, please check your mail', false, 'top');\n      await toast.present();\n  }\n  moveToLog(){\n    this.router.navigate(['admin/signup']);\n\n  }\n}\n"],"names":["Component","Router","AngularFireAuth","FirebaseAuthenticationService","ApiService","InituserService","getAuth","updatePassword","NavController","UtilService","FirestoreService","LoginPage","constructor","router","fireauth","api","initUser","navCont","util","firestore","authentication","email","password","ngOnInit","moveTo","console","log","user","login","then","res","uid","loginUserId","pass","update","navigate","setToken","getUser","subscribe","id","setLoggedInAdmin","loggedinUser","getUserData","error","toast","createToast","present","resetpass","auth","currentUser","temPassword","forgetpass","backlog","forgetpassword","backlogin","sendEmail","forgotPassoword","moveToLog","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}