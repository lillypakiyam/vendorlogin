{"version":3,"file":"src_app_pages_password-change_password-change_module_ts.js","mappings":"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","sources":["./src/app/pages/password-change/password-change-routing.module.ts","./src/app/pages/password-change/password-change.module.ts","./src/app/pages/password-change/password-change.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordChangePage } from './password-change.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordChangePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordChangePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordChangePageRoutingModule } from './password-change-routing.module';\n\nimport { PasswordChangePage } from './password-change.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordChangePageRoutingModule\n  ],\n  declarations: [PasswordChangePage]\n})\nexport class PasswordChangePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/service/api.service';\nimport { FirebaseAuthenticationService } from 'src/app/service/firebase-authentication.service';\nimport { FirestoreService } from 'src/app/service/firestore.service';\nimport { InituserService } from 'src/app/service/inituser.service';\nimport { User } from '../models/user';\nimport { Vendor } from '../models/vendor';\nimport {updatePassword, getAuth} from 'firebase/auth'\n@Component({\n  selector: 'app-password-change',\n  templateUrl: './password-change.page.html',\n  styleUrls: ['./password-change.page.scss'],\n})\nexport class PasswordChangePage implements OnInit {\n\n  public code:any;\n  private loggedInAdmin: Vendor;\n  private loggedInAdminid: any;\n  private loggedInVendor: any;\n  private emailId:any;\n  vendorColor=false\n  passwordChange=false\n  public vendorInfo ={\n    current_password:'',\n    new_password:'',\n    confirm_new_password:''\n  }\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private api: ApiService,\n              private inituser: InituserService,\n              private authentica: FirebaseAuthenticationService,\n              private firestore: FirestoreService,) { \n                this.code = this.route.snapshot.queryParams['oobCode'];\n                console.log(this.code)\n                this.loggedInVendor = this.inituser.getVendorData()\n                this.loggedInAdminid = this.inituser.getUserData()\n                console.log(this.loggedInAdminid.id)\n                // this.currentPass()\n                this.vendorColor =false;\n                // 14V9patao483twxiXL6FBbINRrSq35Kc_4IVvkWKGdYAAAGDorw9mQ\n               \n                \n            }\n\n  ngOnInit() {\n\n  }\n  \n  moveTo(){\n    this.loggedInAdmin = this.inituser.getVendorData();\n    if(this.vendorInfo.current_password === this.loggedInVendor.temprory_password){\n      if(this.vendorInfo.new_password === this.vendorInfo.confirm_new_password){\n        console.log(this.loggedInAdmin)\n        const psw:any = {\n          id: this.loggedInAdmin.id,\n          Current_password: this.vendorInfo.current_password,\n          New_password: this.vendorInfo.new_password,\n          Confirm_new_password: this.vendorInfo.confirm_new_password,\n        }\n        this.firestore.update('vendorAdd',psw.id,psw).then(res=>{\n        console.log(res)\n        })\n        this.router.navigate(['pages/vendor-profile']);\n      }\n    }else{\n    console.log(this.vendorInfo.current_password !== this.loggedInVendor.temprory_password)\n    console.log(this.vendorInfo.current_password)\n    this.vendorColor =false\n    }\n\n  }\n\n  currentPass(){\n    if(this.vendorInfo.current_password !== this.loggedInVendor.temprory_password && this.vendorInfo.current_password.length !== 0){\n    return { 'border-color': 'red' }\n    }\n    if(this.vendorInfo.current_password.length === 0){\n    return { 'border-color': 'lightgray' }\n    }\n  }\n\n  NewPassword(){\n    if(this.vendorInfo.new_password !== this.vendorInfo.confirm_new_password && this.vendorInfo.confirm_new_password.length !== 0){\n\n    return { 'border-color': 'red' }\n    }\n    if(this.vendorInfo.confirm_new_password.length === 0){\n    return { 'border-color': 'lightgray' }\n    }\n  }\n  login(){\n    this.router.navigate(['/login'])\n  }\n  moveToPsw(){\n    this.router.navigate(['pages/forget-psw']);\n  }\n  moveToId(){\n    this.router.navigate(['/forget-vendor-id'])\n  }\n\n  resetpassword(){\n    if(this.vendorInfo.current_password === this.loggedInVendor.temprory_password){\n      if(this.vendorInfo.new_password === this.vendorInfo.confirm_new_password){\n        console.log(this.vendorInfo.new_password , this.vendorInfo.confirm_new_password)\n    //    this.authentica.passEmail(this.code, this.vendorInfo.confirm_new_password).then(user =>{\n    //    console.log(user)\n    //    this.router.navigate(['pages/vendor-profile'])\n    //   }).catch(error=>{\n    //    console.log(error)\n    //  })\n    const auth = getAuth()\n    const user = auth.currentUser\n    console.log(auth, user)\n    updatePassword(user, this.vendorInfo.confirm_new_password).then(res =>{\n      console.log(res)\n      this.moveTo()\n      this.router.navigate(['pages/vendor-profile'])\n    })\n    }else{\n     this.NewPassword() \n   }\n  }else{\n  console.log(this.vendorInfo.current_password !== this.loggedInVendor.temprory_password)\n  console.log(this.vendorInfo.current_password)\n  this.vendorColor =true;\n  this.currentPass()\n  }\n }\n\n Logout(){\n  this.inituser.vendorLogout().then(logout =>{\n    console.log('id:null', logout)\n    this.router.navigate(['pages/logout']);\n  })\n  // this.router.navigate(['/logout'])\n}\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}